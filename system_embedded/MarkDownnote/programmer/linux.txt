Command [-options] [parameter]
注意区别大小写
shift 配合上下左右-->移动光标并选择
ctrl   配合左右-->光标快速移动

Ctrl shift + 放大字体          Ctrl -  缩小字体           Ctrl c   清除指令           Tab  补全命令

ls          list 
pwd     print work directory
cd      【目录名】   change directory
touch 【文件名】   如果文件不存在，新建文件。若存在，修改文件最后操作时间
mkdir 【目录名】   make directory  创建目录           mkdir -p  a/b/c/d  递归创建指令
rm      【文件名】  remove  删除指定文件名
clear     清屏

.文件名.xxx    表示隐藏文件
ls -a 查看所有(包括隐藏文件)
ls -l  查看详细信息
ls -h 配合  -l  查看详细信息，并人性化显示文件大小
ls -h -a   等同于  ls  -ha

.  当前所在目录         ..  上层目录          ~ 家目录
cd~      切换到当前home下的用户       /home/用户目录
cd..       切换到上级目录
cd-       在最近的工作目录中来回切换

*             代表  任意个数  任意字符 包括空白字符      例：   *1*可以代表  23123.txt   123.txt等
？           代表  任意一个字符   不包括空白字符          例：    1？1 不能代表  11
[abceh]   代表匹配abceh中的任意一个字符
[a-f]        代表匹配a~f范围内的任意一个字符             例：   [1-99]

command --help           man  command          (联网速查)
空格翻页   enter滚动一行    b上一页  f下一页   q退出   /word搜索word字符串
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

rm      【文件名】    删除后不能恢复---------------------------------------------------------------------------------------------------------------------------------------
rm -r  【目录名】    递归删除，用于删除文件目录
rm -r *                     超级删除
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

tree 【目录名】    以树状图列出文件目录结构 ---------------------------------------------------------------------------------------------------------------------
tree ~     tree  -d显示树状文件夹目录而不显示文件
linux需要使用到路径时可以使用(绝对路径/结合当前位置的相对路径)  
linux中的路径(文件名相当于地址，cp和mv等操作，相当于移动一个{东西}去向目标地址，若目标地址已经存在{东西}，会产生覆盖操作)
cp     【源文件路径】【目标地址路径】 (目标文件名可省略)      
cp -i   覆盖提示，避免在不知情的情况下覆盖了旧文件(当目标地址有同名文件时会产生覆盖)
cp -r  递归复制，用于复制文件夹
mv   【源文件路径】【目标文件路径】   可以直接移动文件夹或者文件
mv也可用于重命名操作，把一个{东西}从一个地址(文件名)移动到另一个地址(文件名)
mv -i  覆盖提示，避免在不知情的情况下，源文件移动到已经存在的文件上时产生覆盖
---------------------------------------------------------------------------------------------------------------------------------------------------------------

cat 【文件名】  concatenate(连接合并) --------------------------------------------------------------------------------------------------------------------
cat -b 【文件名】只给有{东西}的行标号，忽略空行
cat -n 【文件名】给所有行标号，包括空行
----------------------------------------------------------------------------------------------------------------------------------------------------------------

grep (global search regular expression(RE) and print out the line,全面搜索正则表达式并把行打印出来)------------------------------------------------
grep   【要搜索的字符串】【搜索域(文件名)】
grep  -n  显示匹配及行号
grep  -v  显示不匹配文件的所有行    grep -vn(比 grep -v 多显示出行号)
grep  -i   忽略大小写
grep  ^a    搜索以  a  开头的行     grep  -n  ^a  --->command options parameter
grep ke$   搜搜以  ke  结尾的行
----------------------------------------------------------------------------------------------------------------------------------------------------------------

echo   回声回响重复  ------------------------------------------------------------------------------------------------------------------------------------------
echo  【字符串x】   将字符串x重复显示到屏幕上，常和重定向命令一起使用
echo   字符串(空格不会打断字符串)   >   【路径地址】(若没有系统自动new一个) 
重定向：将本应显示在终端上的内容 (>) 输出/ (>>)追加 到指定文件中
>  输出，覆盖文件原有的内容
例如：echo xxx > a   ；    ls -lh > a 将本应该显示在终端上的内容重定向到a文件中，并覆盖a中原有的内容
>>追加， 会将内容追加到已有文件的末尾
例如：tree >> a       ； echo   xxx  >>a
 ----------------------------------------------------------------------------------------------------------------------------------------------------------------

管道 |    -------------------------------------------------------------------------------------------------------------------------------------------------------
把左边命令执行后的结果，放在右边命令再执行
ls -lha ~ | more
ls -lha ~ | grep Do
-----------------------------------------------------------------------------------------------------------------------------------------------------------------

关机  shutdown-----------------------------------------------------------------------------------------------------------------------------------------------
shutdown  【时间】     不配置参数默认1min后关闭电脑，配置为now立刻关机
shutdown   -r  【时间】  重启(远程维护时不要关机，要选择重启)
shutdown   -r   now         立刻重启
shutdown   20:23         八点二十三关机
shutdown   +10         再过十分钟关机
shutdown   -c          取消关机
只要电脑没关，就可以重复修改关机时间或者取消关机
-----------------------------------------------------------------------------------------------------------------------------------------------------------------

网卡（有线网卡/无线网卡）---------------------------------------------------------------------------------------------------------------------------------------------
电脑--电话    网卡--SIM手机卡    IP地址--手机号
ifconfig （network interface configuration）    查看/配置网卡 详细信息(包含ip地址)
ifconfig   | grep inet   只查看ip
ping  【ip地址】   检测目标ip地址的连接是否正常(是否正常连接到另一台电脑)
原理:主机发送一个56byte的数据包给目标主机，目标主机返回一个64的数据包，检测一去一回时间time=xxx ms，时间越短表示延迟越短
此命令会持续重复发送与接收来检测主机与目标主机的网络连接   (按Ctrl c结束检测，大多数连续进程都能用ctrl c结束）
ping 127.0.0.1   检测本地网卡是否正常    (127.0.0.1称为网络回环地址)
ping的原理类似潜水艇声纳(拟声ping)     ping一下某台计算机(检测某台计算器是否开着通讯)
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------

ssh客户端(macOS和linux一般自带，win需要自己安装)-------------------------------------------------------------------------------------------------------------------------------------------
ssh客户端是一种使用Secure Shell(ssh)协议的远程控制软件，可以对数据进行加密(安全)和压缩(快速传输)
域名  某主机ip地址的别名    即可以 ping 【域名】    例如 ping www.baidu.com
端口号  某主机上的某程序别名  常见默认端口号： SSH服务器 22       Web服务器 80     HTTPS 443    FTP服务器 21
【ip】:80  表示访问某主机(ip)上的Web程序
例如访问百度  在网址栏中可以搜索【ip】/【域名】：80   先找到百度主机，再访问主机上的Web服务器
其中，百度主机上给用户提供的是网页使用(也就是Web服务器的使用)，所以端口号要输入80而不能是别的，如果输入别的，则会访问百度主机上的其他内容(肯定是连接失败，百度主机不会让你访问)
端口号有时也可省略，因为连接百度的时候默认为80，连接ssh的时候默认为22
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

ssh 【-p port】[username@remote_ip地址]------------------------------------------------------------------------------------------------------------------------------------------------------------------
username  远程机器上的用户名，如果不指定默认为当前用户
remote_ip  远程机器的地址【ip/域名】
【-p port】 指定端口号，若使用的ssh连接是22端口，则不用指定，因为默认值为22
exit 退出当前用户的登录
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

scp  secure copy安全拷贝------------相比cp命令加了一个s-----------------------------------------------------------------------------------------------------------------------------------------------
可以用于将在本地写好的python等程序移植到目标主机
scp【-P port】【路径地址】【username @ ip地址 : 远程路径地址 】   (若命令中的远程主机的路径不是绝对路径，则被看做以远程用户的家目录为参考的相对路径)
也可以将目标主机上的东西远程安全移动到本地主机
scp【-P port】【username @ ip地址 : 远程路径地址 】【路径地址】   
若目标地址不存在，系统会自动new一个，若存在，会覆盖。
【-P port】 指定端口号，若使用的ssh连接是22端口，则不用指定，因为默认值为22，P大写
scp 【-P port】 -r   通cp命令，递归复制，用于文件夹的复制，需要保证目标地址是文件夹
rsync只复制地址中有修改的部分，scp复制整个地址中的东西，因此scp慢，但scp有ssh安全协议，rsync没有，且rsync传输占用带宽高，需要进行限速
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

pscp   在win和linux/unix之间传输--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
scp只能用于linux/unix之间传输，win10以后windows自带scp

免密码登录
ssh-keygen      生成公钥【id_rsa.pub】和私钥【id_rsa】(放在隐藏文件【.ssh】中，该文件用于保存ssh的配置)
ssh-copy-id  【-p port】【username@remote_ip】  把公钥上传至ssh服务器
原理    非对称加密算法
使用私钥加密(解密)数据，使用公钥解密(加密)数据。
ssh设置别名
在 【~/.ssh/config】追加
Host 【服务器名】   (之后就用服务器名代替-p port username@remote_ip)
	HostName 【服务器ip地址】（预设了@remote_ip）
	User xxx     【服务器用户名】（预设了 username）
	Port  22       【服务器端口号】(预设了-p port)
设置完后
ssh 【-p port】[username@remote_ip地址]  
简化为   ssh 【服务器名】
scp【-P port】【路径地址】【username @ ip地址 : 远程路径地址 】
简化为 scp 【路径地址】【: 远程路径地址】

权限     1:   【-】--> 文件    【d】-->  文件夹      2：拥有者权限    3:  组权限     4: 其他用户权限
1    2     3      4           
-    rw-  rw-   rw-          
d   rwx  rwx   rwx


r  可读权限  w  可写权限    x 可执行权限
硬链接数  -->  可到达该地址的方式
对于文件  通过绝对路径到达  1种
对于文件夹   通过绝对路径到达  1种，通过【cd .】   1种，在子目录的文件夹中通过【cd ..】 x种(子目录中，有多少个文件夹，就有多少种【cd ..】方法)
也就是对于文件地址，硬链接数为1，对于文件夹地址，硬链接数为【2+子文件夹个数】

chmod 【-/+】 【r/w/x】 【文件夹地址/文件地址】
对于文件，若-wx，则无法用cat/gedit查看。若r-x，则无法修改，或编辑后无法保存。若rw-，则无法执行。
对于文件夹，若rw-，则无法打开。若r-x，则打开后，可读，无法覆盖/修改(无法移入/修改文件)。若-wx，则打开后无法ls

超级用户【root】拥有全部【rwx】权限，一般用于系统的维护管理。一般不用root登录到主机。
sudo命令，substitute user do 表示使用另一个身份do sth。默认是root身份。
【sudo】【command】  使用sudo需要输入密码，有效期五分钟。

系统配置存放在 etc 中    (配置组需要root或者sudo)
/etc/group  中存入组信息
groupadd 【组名】添加组
groupdel【组名】删除组
cat  /etc/group  查看组信息
chgrp 【-R递归】【组名】【文件夹/文件地址】





































